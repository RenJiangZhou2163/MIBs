# These are the Digital Coil inputs with StepMTst
file "../../db/bi_bit.template" { pattern
{P,           R,         PORT,             OFFSET,   ZNAM,   ONAM,  ZSV,       OSV,    SCAN}
{STEP:,    CInB0,     Step_Motor_CIn_Bit,     0,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB1,     Step_Motor_CIn_Bit,     1,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB2,     Step_Motor_CIn_Bit,     2,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB3,     Step_Motor_CIn_Bit,     3,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB4,     Step_Motor_CIn_Bit,     4,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB5,     Step_Motor_CIn_Bit,     5,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB6,     Step_Motor_CIn_Bit,     6,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB7,     Step_Motor_CIn_Bit,     7,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB8,     Step_Motor_CIn_Bit,     8,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB9,     Step_Motor_CIn_Bit,     9,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB10,     Step_Motor_CIn_Bit,    10,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB11,     Step_Motor_CIn_Bit,    11,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB12,     Step_Motor_CIn_Bit,    12,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB13,     Step_Motor_CIn_Bit,    13,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB14,     Step_Motor_CIn_Bit,    14,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"}
{STEP:,    CInB15,     Step_Motor_CIn_Bit,    15,     Low,    High,  NO_ALARM,  MAJOR,  "I/O Intr"} 
}

file "../../db/bo_bit.template" { pattern
{P,        R,		   PORT,              OFFSET,   ZNAM,   ONAM}
{STEP:,    COutB0,     Step_Motor_COut,     0,        Low,    High}
{STEP:,    COutB1,     Step_Motor_COut,     1,        Low,    High}
{STEP:,    COutB2,     Step_Motor_COut,     2,        Low,    High}
{STEP:,    COutB3,     Step_Motor_COut,     3,        Low,    High}
{STEP:,    COutB4,     Step_Motor_COut,     4,        Low,    High}
{STEP:,    COutB5,     Step_Motor_COut,     5,        Low,    High}
{STEP:,    COutB6,     Step_Motor_COut,     6,        Low,    High}
{STEP:,    COutB7,     Step_Motor_COut,     7,        Low,    High}
{STEP:,    COutB8,     Step_Motor_COut,     8,        Low,    High}
{STEP:,    COutB9,     Step_Motor_COut,     9,        Low,    High}
{STEP:,    COutB10,     Step_Motor_COut,     10,        Low,    High}
{STEP:,    COutB11,     Step_Motor_COut,     11,        Low,    High}
{STEP:,    COutB12,     Step_Motor_COut,     12,        Low,    High}
{STEP:,    COutB13,     Step_Motor_COut,     13,        Low,    High}
{STEP:,    COutB14,     Step_Motor_COut,     14,        Low,    High}
{STEP:,    COutB15,     Step_Motor_COut,     15,        Low,    High}
}
    
# These are the A0 outputs done with word access.
file "../../db/longoutInt32.template" { pattern
{P,           R,               PORT,            OFFSET,   DATA_TYPE}
{STEP:,    AOutA0,           Step_Motor_AOut,    0,       INT32_LE}
{STEP:,    AOutA1,           Step_Motor_AOut,    2,       INT32_LE}
{STEP:,    AOutA2,           Step_Motor_AOut,    4,       INT32_LE}
{STEP:,    AOutA3,           Step_Motor_AOut,    6,       INT32_LE}
{STEP:,    AOutA4,           Step_Motor_AOut,    8,       INT32_LE}
{STEP:,    AOutA5,           Step_Motor_AOut,    10,      INT32_LE}
{STEP:,    AOutA6,           Step_Motor_AOut,    12,      INT32_LE}
{STEP:,    AOutA7,           Step_Motor_AOut,    14,      INT32_LE}
{STEP:,    AOutA8,           Step_Motor_AOut,    16,      INT32_LE}
{STEP:,    AOutA9,           Step_Motor_AOut,    18,      INT32_LE}
}





# These are the A0 inputs done with word access
file "../../db/longinInt32.template" { pattern
{P,           R,                PORT,          OFFSET,   DATA_TYPE,         SCAN}
{STEP:,    AInA0,            Step_Motor_AIn,     0,       UINT16,    ".5 second"}
{STEP:,    AInA1,            Step_Motor_AIn,     1,       UINT16,    ".5 second"}
{STEP:,    AInA2,            Step_Motor_AIn,     2,       UINT16,    ".5 second"}
{STEP:,    AInA3,            Step_Motor_AIn,     3,       UINT16,    ".5 second"}
{STEP:,    AInA4,            Step_Motor_AIn,     4,       UINT16,    ".5 second"}
{STEP:,    AInA5,            Step_Motor_AIn,     5,       UINT16,    ".5 second"}
{STEP:,    AInA6,            Step_Motor_AIn,     6,       UINT16,    ".5 second"}
{STEP:,    AInA7,            Step_Motor_AIn,     7,       UINT16,    ".5 second"}
{STEP:,    AInA8,            Step_Motor_AIn,     8,       UINT16,    ".5 second"}
{STEP:,    AInA9,            Step_Motor_AIn,     9,       UINT16,    ".5 second"}
}

file "../../db/aoFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC}
{STEP:,    FOutF0,        Step_Motor_FOut,   0,    FLOAT32_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF1,        Step_Motor_FOut,   2,    FLOAT32_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF2,        Step_Motor_FOut,   4,    FLOAT64_LE,   -1e6,  1e6,    6}
{STEP:,    FOutF3,        Step_Motor_FOut,   8,    FLOAT64_LE,   -1e6,  1e6,    6}
}

file "../../db/aiFloat64.template" { pattern
{P,           R,               PORT,      OFFSET,   DATA_TYPE,    LOPR, HOPR, PREC  SCAN}
{STEP:,    FInF0,        Step_Motor_FIn,   0,    FLOAT32_LE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF1,        Step_Motor_FIn,   2,    FLOAT32_LE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF2,        Step_Motor_FIn,   4,    FLOAT64_LE,   -1e6,  1e6,    6   ".5 second"}
{STEP:,    FInF3,        Step_Motor_FIn,   8,    FLOAT64_LE,   -1e6,  1e6,    6   ".5 second"}
}
