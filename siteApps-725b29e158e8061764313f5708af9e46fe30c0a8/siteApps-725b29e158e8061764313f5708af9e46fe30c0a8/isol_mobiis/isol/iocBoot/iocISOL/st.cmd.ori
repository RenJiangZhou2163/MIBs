#!/home/epics/bin/MOBIIXA

## You may have to change MOBIIXA to something else
## everywhere it appears in this file

cd /home/epics/iocBoot/iocMOBIIXA

< envPaths

## Register all support components
dbLoadDatabase("../../dbd/MOBIIXA.dbd",0,0)
MOBIIXA_registerRecordDeviceDriver(pdbbase) 

#
### save_restore setup
# We presume a suitable initHook routine was compiled into....
# See also create_monitor_set(), after iocInit() .

cd "$(TOP)/iocBoot/$(IOC)"

#< save_restore.cmd
#cd "$(TOP)"
#


## Load record instances
#dbLoadRecords("../../db/MOBIIXA.db","user=ywkim")

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_FE_F4_PUMPING_SPOOL_1,L=8,A=1")
drvAsynSerialPortConfigure("L8","/dev/ttyM8",0,0,0)
asynSetOption("L8",-1,"baud","9600")
asynSetOption("L8",-1,"bits","8")
asynSetOption("L8",-1,"parity","none")
asynSetOption("L8",-1,"stop","1")
asynSetOption("L8",-1,"clocal","Y")
asynSetOption("L8",-1,"crtscts","N")
asynSetOption("L8",-1,"mode","2")
#asynSetTraceMask("L8",-1,0x9)
#asynSetTraceIOMask("L8",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_FE_F16_PUMPING_SPOOL_3,L=9,A=1")
drvAsynSerialPortConfigure("L9","/dev/ttyM9",0,0,0)
asynSetOption("L9",-1,"baud","9600")
asynSetOption("L9",-1,"bits","8")
asynSetOption("L9",-1,"parity","none")
asynSetOption("L9",-1,"stop","1")
asynSetOption("L9",-1,"clocal","Y")
asynSetOption("L9",-1,"crtscts","N")
asynSetOption("L9",-1,"mode","2")
#asynSetTraceMask("L9",-1,0x9)
#asynSetTraceIOMask("L9",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_DCM_2,L=10,A=1")
dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_DCM_1,L=10,A=2")
drvAsynSerialPortConfigure("L10","/dev/ttyM10",0,0,0)
asynSetOption("L10",-1,"baud","9600")
asynSetOption("L10",-1,"bits","8")
asynSetOption("L10",-1,"parity","none")
asynSetOption("L10",-1,"stop","1")
asynSetOption("L10",-1,"clocal","Y")
asynSetOption("L10",-1,"crtscts","N")
asynSetOption("L10",-1,"mode","2")
#asynSetTraceMask("L10",-1,0x9)
#asynSetTraceIOMask("L10",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_MONO_SLIT_1,L=11,A=1")
dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_DCM_3,L=11,A=2")
drvAsynSerialPortConfigure("L11","/dev/ttyM11",0,0,0)
asynSetOption("L11",-1,"baud","9600")
asynSetOption("L11",-1,"bits","8")
asynSetOption("L11",-1,"parity","none")
asynSetOption("L11",-1,"stop","1")
asynSetOption("L11",-1,"clocal","Y")
asynSetOption("L11",-1,"crtscts","N")
asynSetOption("L11",-1,"mode","2")
#asynSetTraceMask("L11",-1,0x9)
#asynSetTraceIOMask("L11",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_HFM_1,L=12,A=1")
drvAsynSerialPortConfigure("L12","/dev/ttyM12",0,0,0)
asynSetOption("L12",-1,"baud","9600")
asynSetOption("L12",-1,"bits","8")
asynSetOption("L12",-1,"parity","none")
asynSetOption("L12",-1,"stop","1")
asynSetOption("L12",-1,"clocal","Y")
asynSetOption("L12",-1,"crtscts","N")
asynSetOption("L12",-1,"mode","2")
#asynSetTraceMask("L12",-1,0x9)
#asynSetTraceIOMask("L12",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_HFM_2,L=13,A=1")
drvAsynSerialPortConfigure("L13","/dev/ttyM13",0,0,0)
asynSetOption("L13",-1,"baud","9600")
asynSetOption("L13",-1,"bits","8")
asynSetOption("L13",-1,"parity","none")
asynSetOption("L13",-1,"stop","1")
asynSetOption("L13",-1,"clocal","Y")
asynSetOption("L13",-1,"crtscts","N")
asynSetOption("L13",-1,"mode","2")
#asynSetTraceMask("L13",-1,0x9)
#asynSetTraceIOMask("L13",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_MONO_SLIT_2,L=14,A=1")
dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_VFM,L=14,A=2")
drvAsynSerialPortConfigure("L14","/dev/ttyM14",0,0,0)
asynSetOption("L14",-1,"baud","9600")
asynSetOption("L14",-1,"bits","8")
asynSetOption("L14",-1,"parity","none")
asynSetOption("L14",-1,"stop","1")
asynSetOption("L14",-1,"clocal","Y")
asynSetOption("L14",-1,"crtscts","N")
asynSetOption("L14",-1,"mode","2")
#asynSetTraceMask("L14",-1,0x9)
#asynSetTraceIOMask("L14",-1,0x2)

dbLoadRecords("../../db/devVARIAN_DUAL.db","P=$(P),R=$(R),M1=$(M1),M2=P_MONO_SLIT_3,L=15,A=1")
drvAsynSerialPortConfigure("L13","/dev/ttyM15",0,0,0)
asynSetOption("L15",-1,"baud","9600")
asynSetOption("L15",-1,"bits","8")
asynSetOption("L15",-1,"parity","none")
asynSetOption("L15",-1,"stop","1")
asynSetOption("L15",-1,"clocal","Y")
asynSetOption("L15",-1,"crtscts","N")
asynSetOption("L15",-1,"mode","2")
#asynSetTraceMask("L15",-1,0x9)
#asynSetTraceIOMask("L15",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_PHOTON_SHUTTER,L=0,A=1")
drvAsynSerialPortConfigure("L0","/dev/ttyM0",0,0,0)
asynSetOption("L0",-1,"baud","9600")
asynSetOption("L0",-1,"bits","8")
asynSetOption("L0",-1,"parity","none")
asynSetOption("L0",-1,"stop","2")
asynSetOption("L0",-1,"clocal","Y")
asynSetOption("L0",-1,"crtscts","N")
asynSetOption("L0",-1,"mode","0")
#asynSetTraceMask("L0",-1,0x9)
#asynSetTraceIOMask("L0",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_FE_WIRE_MONITOR_SCREEN_MONITOR,L=1,A=1")
drvAsynSerialPortConfigure("L1","/dev/ttyM1",0,0,0)
asynSetOption("L1",-1,"baud","9600")
asynSetOption("L1",-1,"bits","8")
asynSetOption("L1",-1,"parity","none")
asynSetOption("L1",-1,"stop","2")
asynSetOption("L1",-1,"clocal","Y")
asynSetOption("L1",-1,"crtscts","N")
asynSetOption("L1",-1,"mode","0")
#asynSetTraceMask("L1",-1,0x9)
#asynSetTraceIOMask("L1",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_FE_SAFETY_SHUTTER,L=2,A=1")
drvAsynSerialPortConfigure("L2","/dev/ttyM2",0,0,0)
asynSetOption("L2",-1,"baud","9600")
asynSetOption("L2",-1,"bits","8")
asynSetOption("L2",-1,"parity","none")
asynSetOption("L2",-1,"stop","2")
asynSetOption("L2",-1,"clocal","Y")
asynSetOption("L2",-1,"crtscts","N")
asynSetOption("L2",-1,"mode","0")
#asynSetTraceMask("L2",-1,0x9)
#asynSetTraceIOMask("L2",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_DCM,L=3,A=1")
drvAsynSerialPortConfigure("L3","/dev/ttyM3",0,0,0)
asynSetOption("L3",-1,"baud","9600")
asynSetOption("L3",-1,"bits","8")
asynSetOption("L3",-1,"parity","none")
asynSetOption("L3",-1,"stop","2")
asynSetOption("L3",-1,"clocal","Y")
asynSetOption("L3",-1,"crtscts","N")
asynSetOption("L3",-1,"mode","0")
#asynSetTraceMask("L3",-1,0x9)
#asynSetTraceIOMask("L3",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_HFM,L=4,A=1")
drvAsynSerialPortConfigure("L4","/dev/ttyM4",0,0,0)
asynSetOption("L4",-1,"baud","9600")
asynSetOption("L4",-1,"bits",8")
asynSetOption("L4",-1,"parity","none")
asynSetOption("L4",-1,"stop","2")
asynSetOption("L4",-1,"clocal","Y")
asynSetOption("L4",-1,"crtscts","N")
asynSetOption("L4",-1,"mode","0")
#asynSetTraceMask("L4",-1,0x9)
#asynSetTraceIOMask("L4",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_VFM,L=5,A=1")
drvAsynSerialPortConfigure("L5","/dev/ttyM5",0,0,0)
asynSetOption("L5",-1,"baud","9600")
asynSetOption("L5",-1,"bits","8")
asynSetOption("L5",-1,"parity","none")
asynSetOption("L5",-1,"stop","2")
asynSetOption("L5",-1,"clocal","Y")
asynSetOption("L5",-1,"crtscts","N")
asynSetOption("L5",-1,"mode","0")
#asynSetTraceMask("L5",-1,0x9)
#asynSetTraceIOMask("L5",-1,0x2)

dbLoadRecords("../../db/devGP.db","P=$(P),R=$(R),M1=$(M1),M2=G_MONO_SLIT_3,L=6,A=1")
drvAsynSerialPortConfigure("L6","/dev/ttyM6",0,0,0)
asynSetOption("L6",-1,"baud","9600")
asynSetOption("L6",-1,"bits","8")
asynSetOption("L6",-1,"parity","none")
asynSetOption("L6",-1,"stop","2")
asynSetOption("L6",-1,"clocal","Y")
asynSetOption("L6",-1,"crtscts","N")
asynSetOption("L6",-1,"mode","0")
#asynSetTraceMask("L6",-1,0x9)
#asynSetTraceIOMask("L6",-1,0x2)

iocInit()


## Start any sequence programs
#seq sncMOBIIXA,"user=ywkim"

#
#===== Start up the autosave task and tell it what to do. =====================================
#save_restoreDebug=20
### Start up the save_restore task and tell it what to do.
# The task is actually named "save_restore".
#
# save positions every five seconds
#create_monitor_set("auto_positions.req",5,"P=$(P),M1=$(M1),M2=$(M2),M3=$(M3),M4=$(M4),M5=$(M5),M6=$(M6),M7=$(M7),M8=$(M8),R=$(R)")
# save other things every thirty seconds
#create_monitor_set("auto_settings.req",60,"P=$(P),M=P_SR")
#
# Handle autosave 'commands' contained in loaded databases.
## makeAutosaveFiles()
## create_monitor_set("info_positions.req",5,"P=$(P)")
## create_monitor_set("info_settings.req",30,"P=$(P)")
#
# =============================================================================================
### Start the saveData task. This fuction need from sscan record.
## saveData_Init("saveData.req","P=$(P)")
# =============================================================================================

