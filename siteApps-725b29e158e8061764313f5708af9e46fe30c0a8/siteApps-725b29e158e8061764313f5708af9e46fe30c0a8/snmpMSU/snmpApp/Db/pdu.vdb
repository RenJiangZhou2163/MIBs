#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/test.dbd")
#! DBDEND


# ----------------------------------------------------------------------
#***********************************************************************
# PDU
#***********************************************************************
# ----------------------------------------------------------------------
#Set Outlet
# outletOn(1), outletOff(2), outletReboot(3), outletUnknown(4), outletOnWithDelay(5), outletOffWithDelay(6), outletRebootWithDelay(7)
record(snmp, "${USER}:${PS2}Outlet1") {
  field(DESC, "Outlet1 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.1 ( 100 i")
  field(PREC, "3")
}

record(snmp, "${USER}:${PS2}Outlet2") {
  field(DESC, "Outlet2 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.2 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet3") {
  field(DESC, "Outlet3 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.3 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet4") {
  field(DESC, "Outlet4 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.4 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet5") {
  field(DESC, "Outlet5 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.5 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet6") {
  field(DESC, "Outlet6 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.6 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet7") {
  field(DESC, "Outlet7 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.7 ( 100 i")
}

record(snmp, "${USER}:${PS2}Outlet8") {
  field(DESC, "Outlet8 Status")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletCtl.8 ( 100 i")
}

# ----------------------------------------------------------------------
## Set time OutletOnWithDelay
# The amount of time (in seconds) the outlet will delay powering on when the MasterSwitch is powered on
# Allowed values are:
# -1 never power on automatically.
# 0  power on with the Master Switch.
# 15 power on 15 seconds after the MasterSwitch has power applied.
# 30 power on 30 seconds after the MasterSwitch has power applied.
# 45 power on 45 seconds after the MasterSwitch has power applied.
# 60 power on 60 seconds (1 minute) after the MasterSwitch has power applied.
# 120 power on 120 seconds (2 minutes) after the MasterSwitch has power applied.
# 300 power on 300 seconds (5 minutes) after the MasterSwitch has power applied.
# If a value other than a supported value is provided in a set request, the PDU interprets it as the next lower acceptable value.  
# If the provided value is lower than the lowest acceptable value, the lowest acceptable value is used.
record(snmp, "${USER}:${PS2}OnTime_Outlet1") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.1 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet2") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.2 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet3") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.3 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet4") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.4 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet5") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.5 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet6") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.6 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet7") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.7 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OnTime_Outlet8") {
  field(DESC, "delay powering on time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOnTime.8 INTEGER: 1000 i")
  field(EGU, "second")
}

# ----------------------------------------------------------------------
## Set time OutletOffWithDelay
# The amount of time (in seconds) the outlet will delay powering off.
# Allowed values are:
# -1 never power off automatically.
# 0  power off with the MasterSwitch.
# 15 power off 15 seconds after being commanded.
# 30 power off 30 seconds after being commanded.
# 45 power off 45 seconds after being commanded.
# 60 power off 60 seconds (1 minute) after being commanded.
# 120 power off 120 seconds (2 minutes) after being commanded.
# 300 power off 300 seconds (5 minutes) after being commanded.
# If a value other than a supported value is provided in a set request, the PDU interprets it as the next lower acceptable value.  
# If the provided value is lower than the lowest acceptable value, the lowest acceptable value is used.
record(snmp, "${USER}:${PS2}OffTime_Outlet1") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.1 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet2") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.2 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet3") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.3 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet4") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.4 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet5") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.5 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet6") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.6 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet7") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.7 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}OffTime_Outlet8") {
  field(DESC, "delay powering off time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletPowerOffTime.8 INTEGER: 1000 i")
  field(EGU, "second")
}

# ----------------------------------------------------------------------
## Set time OutletRebootWithDelay
# During a reboot sequence, power is turned off and then back on. This OID defines the amount of time to wait, in seconds, 
# after turning the power off, at the start of the sequence, before turning power back on, at the end of the reboot sequence.       
# Allowed values are:
# 5 wait 5 seconds between off/on.
# 10 wait 10 seconds between off/on.
# 15 wait 15 seconds between off/on.
# 20 wait 20 seconds between off/on.
# 30 wait 30 seconds between off/on.
# 45 wait 45 seconds between off/on.
# 60 wait 60 seconds (1 minute) between off/on.  
# If a value other than a supported value is provided in a  set request, the PDU interprets it as the next lower acceptable value.  
# If the provided value is lower than the lowest acceptable value, the lowest acceptable value is used
record(snmp, "${USER}:${PS2}RebootTime_Outlet1") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.1 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet2") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.2 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet3") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.3 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet4") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.4 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet5") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.5 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet6") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.6 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet7") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.7 INTEGER: 1000 i")
  field(EGU, "second")
}

record(snmp, "${USER}:${PS2}RebootTime_Outlet8") {
  field(DESC, "delay powering reboot time")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)sPDUOutletRebootDuration.8 INTEGER: 1000 i")
  field(EGU, "second")
}

# ----------------------------------------------------------------------
## Rating
# Getting this OID will return the electrical rating of the device in Amps.
record(snmp, "${USER}:${PS2}Rating") {
  field(DESC, "rating of the device in Amps")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)rPDUIdentDeviceRating.0 INTEGER: 100 ")
  field(EGU, "A")
}

## Line to Line Voltage
# Getting/Setting this OID will return/set the Line to Line Voltage. This OID defaults to the nominal input line voltage in volts AC.
record(snmp, "${USER}:${PS2}LineVoltage") {
  field(DESC, "Line to Line Voltage")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)rPDUIdentDeviceLinetoLineVoltage.0 INTEGER: 100 i ")
  field(EGU, "V")
}

## PowerWatts
# Getting this OID will return the Power in Watts.
record(snmp, "${USER}:${PS2}PowerWatts") {
  field(DESC, "PowerWatts")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)rPDUIdentDevicePowerWatts.0 INTEGER: 1000 ")
  field(EGU, "V")
}

## Power Factor
# Getting/setting this OID will return/set the Power Factor in thousanths (1000 is power factor of 1). Valid range is from 0 to 1000.
record(snmp, "${USER}:${PS2}PowerFactor") {
  field(DESC, "Power Factor")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)rPDUIdentDevicePowerFactor.0 INTEGER: 1000 i ")
  field(EGU, "V")
}

# ----------------------------------------------------------------------
## Set LowLoadThreshold
# A threshold that indicates the power consumption of the load is nearing a low consumption condition.
record(snmp, "${USER}:${PS2}LowLoad") {
  field(DESC, "LowLoadThreshold")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)%(Load)LowLoadThreshold.phase1 INTEGER: 1000 i ")
  field(EGU, "A")
}

## Set NearOverloadThreshold
# A threshold that indicates the power consumption of the load is nearing an overload condition.
record(snmp, "${USER}:${PS2}NearOverload") {
  field(DESC, "NearOverloadThreshold")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)%(Load)NearOverloadThreshold.phase1 INTEGER: 1000 i ")
  field(EGU, "A")
}

## Set OverloadThreshold
# A threshold that indicates the power consumption of the load has entered an overload condition.
record(snmp, "${USER}:${PS2}Overload") {
  field(DESC, "OverloadThreshold")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)%(Load)OverloadThreshold.phase1 INTEGER: 1000 i ")
  field(EGU, "A")
}

# ----------------------------------------------------------------------
## Power Load
# Getting/setting this OID will return/set the Power Factor in thousanths (1000 is power factor of 1). Valid range is from 0 to 1000.
record(snmp, "${USER}:${PS2}PowerLoad") {
  field(DESC, "Power Load")
  field(SCAN, "Passive")
  field(DTYP, "SoftChannel")
  field(OUT, "@%(PDU2) %(CM1) %(PO)rPDULoadStatusLoad.1 Gauge32: 100")
  field(PREC, "3")
  field(EGU, "A")
}


#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("${USER}:${PS2}Outlet1",20,14,0,0,"${USER}:${PS2}Outlet1")
#! Record("${USER}:${PS2}Outlet2",260,28,0,0,"${USER}:${PS2}Outlet2")
#! Record("${USER}:${PS2}Outlet3",500,28,0,0,"${USER}:${PS2}Outlet3")
#! Record("${USER}:${PS2}Outlet4",740,14,0,0,"${USER}:${PS2}Outlet4")
#! Field("${USER}:${PS2}Outlet4.FLNK",16777215,1,"${USER}:${PS2}Outlet4.FLNK")
#! Link("${USER}:${PS2}Outlet4.FLNK",test)
#! Record("${USER}:${PS2}Outlet5",980,14,0,0,"${USER}:${PS2}Outlet5")
#! Field("${USER}:${PS2}Outlet5.FLNK",16777215,0,"${USER}:${PS2}Outlet5.FLNK")
#! Link("${USER}:${PS2}Outlet5.FLNK",test)
#! Record("${USER}:${PS2}Outlet6",1220,14,0,0,"${USER}:${PS2}Outlet6")
#! Field("${USER}:${PS2}Outlet6.FLNK",16777215,0,"${USER}:${PS2}Outlet6.FLNK")
#! Link("${USER}:${PS2}Outlet6.FLNK",test)
#! Record("${USER}:${PS2}Outlet7",1460,28,0,0,"${USER}:${PS2}Outlet7")
#! Record("${USER}:${PS2}Outlet8",1700,28,0,0,"${USER}:${PS2}Outlet8")
#! Record("${USER}:${PS2}OnTime_Outlet1",1940,14,0,0,"${USER}:${PS2}OnTime_Outlet1")
#! Record("${USER}:${PS2}OnTime_Outlet2",2180,14,0,0,"${USER}:${PS2}OnTime_Outlet2")
#! Record("${USER}:${PS2}OnTime_Outlet3",2420,14,0,0,"${USER}:${PS2}OnTime_Outlet3")
#! Record("${USER}:${PS2}OnTime_Outlet4",2660,14,0,0,"${USER}:${PS2}OnTime_Outlet4")
#! Record("${USER}:${PS2}OnTime_Outlet5",2900,14,0,0,"${USER}:${PS2}OnTime_Outlet5")
#! Record("${USER}:${PS2}OnTime_Outlet6",3140,14,0,0,"${USER}:${PS2}OnTime_Outlet6")
#! Record("${USER}:${PS2}OnTime_Outlet7",3380,14,0,0,"${USER}:${PS2}OnTime_Outlet7")
#! Record("${USER}:${PS2}OnTime_Outlet8",3620,14,0,0,"${USER}:${PS2}OnTime_Outlet8")
#! Record("${USER}:${PS2}OffTime_Outlet1",3860,14,0,0,"${USER}:${PS2}OffTime_Outlet1")
#! Record("${USER}:${PS2}OffTime_Outlet2",4100,14,0,0,"${USER}:${PS2}OffTime_Outlet2")
#! Record("${USER}:${PS2}OffTime_Outlet3",4340,14,0,0,"${USER}:${PS2}OffTime_Outlet3")
#! Record("${USER}:${PS2}OffTime_Outlet4",4580,14,0,0,"${USER}:${PS2}OffTime_Outlet4")
#! Record("${USER}:${PS2}OffTime_Outlet5",20,374,0,0,"${USER}:${PS2}OffTime_Outlet5")
#! Record("${USER}:${PS2}OffTime_Outlet6",260,374,0,0,"${USER}:${PS2}OffTime_Outlet6")
#! Record("${USER}:${PS2}OffTime_Outlet7",500,374,0,0,"${USER}:${PS2}OffTime_Outlet7")
#! Record("${USER}:${PS2}OffTime_Outlet8",740,374,0,0,"${USER}:${PS2}OffTime_Outlet8")
#! Record("${USER}:${PS2}RebootTime_Outlet1",980,374,0,0,"${USER}:${PS2}RebootTime_Outlet1")
#! Record("${USER}:${PS2}RebootTime_Outlet2",1220,374,0,0,"${USER}:${PS2}RebootTime_Outlet2")
#! Record("${USER}:${PS2}RebootTime_Outlet3",1460,374,0,0,"${USER}:${PS2}RebootTime_Outlet3")
#! Record("${USER}:${PS2}RebootTime_Outlet4",1700,374,0,0,"${USER}:${PS2}RebootTime_Outlet4")
#! Record("${USER}:${PS2}RebootTime_Outlet5",1940,374,0,0,"${USER}:${PS2}RebootTime_Outlet5")
#! Record("${USER}:${PS2}RebootTime_Outlet6",2180,374,0,0,"${USER}:${PS2}RebootTime_Outlet6")
#! Record("${USER}:${PS2}RebootTime_Outlet7",2420,374,0,0,"${USER}:${PS2}RebootTime_Outlet7")
#! Record("${USER}:${PS2}RebootTime_Outlet8",2660,374,0,0,"${USER}:${PS2}RebootTime_Outlet8")
#! Record("${USER}:${PS2}Rating",2900,374,0,0,"${USER}:${PS2}Rating")
#! Record("${USER}:${PS2}LineVoltage",3140,374,0,0,"${USER}:${PS2}LineVoltage")
#! Record("${USER}:${PS2}PowerWatts",3380,374,0,0,"${USER}:${PS2}PowerWatts")
#! Record("${USER}:${PS2}PowerFactor",3620,374,0,0,"${USER}:${PS2}PowerFactor")
#! Record("${USER}:${PS2}LowLoad",3860,374,0,0,"${USER}:${PS2}LowLoad")
#! Record("${USER}:${PS2}NearOverload",4100,374,0,0,"${USER}:${PS2}NearOverload")
#! Record("${USER}:${PS2}Overload",4340,374,0,0,"${USER}:${PS2}Overload")
#! Record("${USER}:${PS2}PowerLoad",4580,380,0,0,"${USER}:${PS2}PowerLoad")
#! Record(test,920,603,0,1,"test")
